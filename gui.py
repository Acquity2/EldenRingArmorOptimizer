# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
from tkinter.ttk import Scrollbar
import tkinter.messagebox as msgbox
import pyglet
import ttkbootstrap as ttk
import tkinter as tk
from ttkbootstrap.constants import *
import main as main

pyglet.font.add_file("SourceSans3-Regular.ttf")
pyglet.font.load("SourceSans3-Regular.ttf")

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path("./assets")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


FixTerm = {"helm": -1, "chest": -1, "gauntlet": -1, "leg": -1}
TreeDir = {}

window = Tk()

window.geometry("1125x566")
window.configure(bg="#252525")

style = ttk.Style("darkly")

canvas = Canvas(
    window,
    bg="#252525",
    height=566,
    width=1125,
    bd=0,
    highlightthickness=0,
    relief="ridge"
)

canvas.place(x=0, y=0)
canvas.create_rectangle(
    0,
    0.0,
    1924.9999999999999,
    1566.0,
    fill="#222222",
    outline="")

canvas.create_rectangle(
    335.9999999999999,
    0.0,
    1225.9999999999999,
    1566.0,
    fill="#303030",
    outline="")

canvas.create_text(
    5.999999999999886,
    41.00000000000001,
    anchor="nw",
    text="ARMOR OPTIMIZER",
    fill="#FCFCFC",
    font=("Source Sans 3", 24 * -1)
)

canvas.create_text(
    5.999999999999886,
    75.0,
    anchor="nw",
    text="Design for Elden Ring",
    fill="#FCFCFC",
    font=("Source Sans 3", 14 * -1)
)

canvas.create_text(
    493.9999999999999,
    50.00000000000001,
    anchor="nw",
    text="胸甲ID",
    fill="#979797",
    font=("Source Sans 3", 16 * -1)
)

canvas.create_text(
    353.9999999999999,
    50.00000000000001,
    anchor="nw",
    text="头盔ID",
    fill="#979797",
    font=("Source Sans 3", 16 * -1)
)

entry_image_1 = PhotoImage(
    file=relative_to_assets("entry_1.png"))
entry_bg_1 = canvas.create_image(
    447.9999999999999,
    60.00000000000001,
    image=entry_image_1
)
HeadIDInputEntry = Entry(
    bd=0,
    bg="#383838",
    highlightthickness=0
)
HeadIDInputEntry.insert(0, "-1")
HeadIDInputEntry.place(
    x=410.9999999999999,
    y=50.00000000000001,
    width=74.0,
    height=18.0
)

entry_image_2 = PhotoImage(
    file=relative_to_assets("entry_2.png"))
entry_bg_2 = canvas.create_image(
    587.9999999999999,
    60.00000000000001,
    image=entry_image_2
)
ChestIDInputEntry = Entry(
    bd=0,
    bg="#383838",
    highlightthickness=0
)
ChestIDInputEntry.insert(0, "-1")
ChestIDInputEntry.place(
    x=550.9999999999999,
    y=50.00000000000001,
    width=74.0,
    height=18.0
)

entry_image_3 = PhotoImage(
    file=relative_to_assets("entry_3.png"))
entry_bg_3 = canvas.create_image(
    727.9999999999999,
    60.00000000000001,
    image=entry_image_3
)
LegIDInputEntry = Entry(
    bd=0,
    bg="#383838",
    highlightthickness=0
)
LegIDInputEntry.insert(0, "-1")
LegIDInputEntry.place(
    x=690.9999999999999,
    y=50.00000000000001,
    width=74.0,
    height=18.0
)

entry_image_4 = PhotoImage(
    file=relative_to_assets("entry_4.png"))
entry_bg_4 = canvas.create_image(
    868.9999999999999,
    60.00000000000001,
    image=entry_image_4
)
GauntletIDInputEntry = Entry(
    bd=0,
    bg="#383838",
    highlightthickness=0
)
GauntletIDInputEntry.insert(0, "-1")
GauntletIDInputEntry.place(
    x=831.9999999999999,
    y=50.00000000000001,
    width=74.0,
    height=18.0
)

entry_image_5 = PhotoImage(
    file=relative_to_assets("entry_5.png"))
entry_bg_5 = canvas.create_image(
    868.9999999999999,
    28.000000000000007,
    image=entry_image_5
)
armorIDOutputEntry = Entry(
    bd=0,
    bg="#383838",
    highlightthickness=0
)
armorIDOutputEntry.place(
    x=831.9999999999999,
    y=18.000000000000007,
    width=74.0,
    height=18.0
)

entry_image_6 = PhotoImage(
    file=relative_to_assets("entry_6.png"))
entry_bg_6 = canvas.create_image(
    627.9999999999999,
    28.000000000000007,
    image=entry_image_6
)
armorNameInputEntry = Entry(
    bd=0,
    bg="#383838",
    highlightthickness=0
)
armorNameInputEntry.place(
    x=490.9999999999999,
    y=18.000000000000007,
    width=274.0,
    height=18.0
)

entry_image_7 = PhotoImage(
    file=relative_to_assets("entry_7.png"))
entry_bg_7 = canvas.create_image(
    209.4999999999999,
    215.0,
    image=entry_image_7
)
MaxWgtInputEntry = Entry(
    bd=0,
    bg="#383838",
    highlightthickness=0
)
MaxWgtInputEntry.place(
    x=103.99999999999989,
    y=205.0,
    width=211.0,
    height=18.0
)

entry_image_8 = PhotoImage(
    file=relative_to_assets("entry_8.png"))
entry_bg_8 = canvas.create_image(
    112.49999999999989,
    157.0,
    image=entry_image_8
)
entry_8 = Entry(
    bd=0,
    bg="#383838",
    highlightthickness=0
)
entry_8.place(
    x=80.99999999999989,
    y=147.0,
    width=63.0,
    height=18.0
)

entry_image_9 = PhotoImage(
    file=relative_to_assets("entry_9.png"))
entry_bg_9 = canvas.create_image(
    209.4999999999999,
    269.0,
    image=entry_image_9
)
PoiInputEntry = Entry(
    bd=0,
    bg="#383838",
    highlightthickness=0
)
PoiInputEntry.place(
    x=103.99999999999989,
    y=259.0,
    width=211.0,
    height=18.0
)

entry_image_10 = PhotoImage(
    file=relative_to_assets("entry_10.png"))
entry_bg_10 = canvas.create_image(
    209.4999999999999,
    242.0,
    image=entry_image_10
)
CurrentWgtInputEntry = Entry(
    bd=0,
    bg="#383838",
    highlightthickness=0
)
CurrentWgtInputEntry.place(
    x=103.99999999999989,
    y=232.0,
    width=211.0,
    height=18.0
)

canvas.create_rectangle(
    353.9999999999999,
    83.0,
    1108.9999999999999,
    86.0,
    fill="#515151",
    outline="")

canvas.create_rectangle(
    5.999999999999886,
    68.0,
    65.99999999999989,
    70.0,
    fill="#00C192",
    outline="")

canvas.create_rectangle(
    12.999999999999886,
    183.0,
    317.9999999999999,
    186.0,
    fill="#515151",
    outline="")

canvas.create_rectangle(
    12.999999999999886,
    296.0,
    317.9999999999999,
    299.0,
    fill="#515151",
    outline="")

canvas.create_rectangle(
    335.9999999999999,
    5.000000000000007,
    338.9999999999999,
    561.0,
    fill="#515151",
    outline="")

canvas.create_text(
    633.9999999999999,
    51.00000000000001,
    anchor="nw",
    text="腿甲ID",
    fill="#979797",
    font=("Almarai Regular", 16 * -1)
)

canvas.create_text(
    774.9999999999999,
    51.00000000000001,
    anchor="nw",
    text="手套ID",
    fill="#979797",
    font=("Almarai Regular", 16 * -1)
)

canvas.create_text(
    12.999999999999886,
    205.0,
    anchor="nw",
    text="MAX Wgt.:",
    fill="#979797",
    font=("Source Sans 3", 16 * -1)
)

canvas.create_text(
    40.999999999999886,
    147.0,
    anchor="nw",
    text="Up to                        % Burden ",
    fill="#979797",
    font=("Source Sans 3", 16 * -1)
)

canvas.create_text(
    40.999999999999886,
    101.0,
    anchor="nw",
    text="Up to 70% Burden",
    fill="#979797",
    font=("Source Sans 3", 16 * -1)
)

canvas.create_text(
    40.999999999999886,
    124.0,
    anchor="nw",
    text="Up to 30% Burden",
    fill="#979797",
    font=("Source Sans 3", 16 * -1)
)

canvas.create_text(
    353.9999999999999,
    18.000000000000007,
    anchor="nw",
    text="Armor Finder",
    fill="#979797",
    font=("Source Sans 3", 16 * -1)
)

canvas.create_text(
    12.999999999999886,
    232.0,
    anchor="nw",
    text="Current Wgt.:",
    fill="#979797",
    font=("Source Sans 3", 16 * -1)
)

canvas.create_text(
    12.999999999999886,
    259.0,
    anchor="nw",
    text="Tgt Poi.:",
    fill="#979797",
    font=("Source Sans 3", 16 * -1)
)

canvas.create_text(
    12.999999999999886,
    316.0,
    anchor="nw",
    text="Sort By",
    fill="#979797",
    font=("Source Sans 3", 16 * -1)
)

image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    133.9999999999999,
    430.0,
    image=image_image_1
)

"""canvas.create_text(
    64.99999999999989,
    351.0,
    anchor="nw",
    text="Even",
    fill="#979797",
    font=("Source Sans 3", 16 * -1)
)

canvas.create_text(
    64.99999999999989,
    378.0,
    anchor="nw",
    text="Even ",
    fill="#979797",
    font=("Source Sans 3", 16 * -1)
)

canvas.create_text(
    64.99999999999989,
    405.0,
    anchor="nw",
    text="Even ",
    fill="#979797",
    font=("Source Sans 3", 16 * -1)
)

canvas.create_text(
    64.99999999999989,
    432.0,
    anchor="nw",
    text="Even ",
    fill="#979797",
    font=("Source Sans 3", 16 * -1)
)

canvas.create_text(
    64.99999999999989,
    459.0,
    anchor="nw",
    text="Even ",
    fill="#979797",
    font=("Source Sans 3", 16 * -1)
)

canvas.create_text(
    64.99999999999989,
    486.0,
    anchor="nw",
    text="Even ",
    fill="#979797",
    font=("Source Sans 3", 16 * -1)
)

canvas.create_text(
    188.9999999999999,
    352.0,
    anchor="nw",
    text="Even",
    fill="#979797",
    font=("Source Sans 3", 16 * -1)
)

canvas.create_text(
    188.9999999999999,
    379.0,
    anchor="nw",
    text="Even ",
    fill="#979797",
    font=("Source Sans 3", 16 * -1)
)

canvas.create_text(
    188.9999999999999,
    406.0,
    anchor="nw",
    text="Even ",
    fill="#979797",
    font=("Source Sans 3", 16 * -1)
)

canvas.create_text(
    188.9999999999999,
    433.0,
    anchor="nw",
    text="Even ",
    fill="#979797",
    font=("Source Sans 3", 16 * -1)
)

canvas.create_text(
    188.9999999999999,
    460.0,
    anchor="nw",
    text="Even ",
    fill="#979797",
    font=("Source Sans 3", 16 * -1)
)

canvas.create_text(
    188.9999999999999,
    487.0,
    anchor="nw",
    text="Even ",
    fill="#979797",
    font=("Source Sans 3", 16 * -1)
)"""

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: findArmor(),
    relief="flat"
)
button_1.place(
    x=769.9999999999999,
    y=17.000000000000007,
    width=57.0,
    height=22.0
)

button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: calculateMode_1(),
    relief="flat"
)
button_2.place(
    x=14.999999999999886,
    y=528.0,
    width=240.0,
    height=26.0
)

button_image_3 = PhotoImage(
    file=relative_to_assets("button_3.png"))
button_3 = Button(
    image=button_image_3,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_3 clicked"),
    relief="flat"
)
button_3.place(
    x=65.99999999999989,
    y=7.105427357601002e-15,
    width=90.0,
    height=40.0
)

button_image_4 = PhotoImage(
    file=relative_to_assets("button_4.png"))
button_4 = Button(
    image=button_image_4,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_4 clicked"),
    relief="flat"
)
button_4.place(
    x=245.9999999999999,
    y=7.105427357601002e-15,
    width=90.0,
    height=40.0
)

button_image_5 = PhotoImage(
    file=relative_to_assets("button_5.png"))
DebugButton = Button(
    image=button_image_5,
    borderwidth=0,
    highlightthickness=0,
    command=lambda:
    printSomeThing()

    ,
    relief="flat"
)
DebugButton.place(
    x=1.1368683772161603e-13,
    y=7.105427357601002e-15,
    width=66.0,
    height=40.0
)

button_image_6 = PhotoImage(
    file=relative_to_assets("button_6.png"))
button_6 = Button(
    image=button_image_6,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_6 clicked"),
    relief="flat"
)
button_6.place(
    x=155.9999999999999,
    y=7.105427357601002e-15,
    width=90.0,
    height=40.0
)

selectedAbs = tk.StringVar()
Abss = (("Phy.Abs.", 1),
        ("VSStr.Abs.", 2),
        ('VSSla.Abs.', 3),
        ('VSPie.Abs.', 4),
        ("Mag.Abs.", 5),
        ("Fir.Abs.", 6),
        ('Lit.Abs.', 7),
        ('Hol.Abs', 8),
        ('Imm.', 9),
        ('Robu.', 10),
        ('Foc.', 11)
        )
key = 0
for size in Abss:
    r = ttk.Radiobutton(
        text=size[0],
        value=size[1],
        variable=selectedAbs
    )
    if key <= 5:
        r.place(
            x=26,
            y=356 + 25 * key,
            height=20
        )
    else:
        r.place(
            x=126,
            y=356 + 25 * (key - 6),
            height=20
        )
    key = key + 1
selectedAbs.set(1)

selectedWgtPercentID = tk.StringVar()
radiobutton = []
WgtPercent = ("7", "3", "1")
key1 = 0
for size in WgtPercent:
    r = ttk.Radiobutton(
        value=size[0],
        variable=selectedWgtPercentID
    )
    r.place(
        x=14,
        y=102 + 22 * key1,
        height=20)
    key1 = key1 + 1
selectedWgtPercentID.set(7)

'''
yscroll = Scrollbar(orient=VERTICAL)
yscroll.place(
    x=1098,
    y=100,
    height=443
)
columns = ['护甲搭配组合']
table = ttk.Treeview(
    height=24,  # 表格显示的行数,height行
    columns=columns,  # 显示的列
    show='headings',  # 隐藏首列
    yscrollcommand=yscroll.set,  # y轴滚动条
selectmode = "browse",

)

table.heading(column='护甲搭配组合', text='护甲搭配组合', anchor=S,
              command=lambda: print('护甲搭配组合'))  # 定义表头

table.column('护甲搭配组合', width=740, minwidth=100, anchor=S, )  # 定义列
table.anchor("center")
table.place(
    x=354,
    y=100, )
table.insert('', END, values=['头盔： Veteran\'s Helm 护甲： Veteran\'s Armor 手套： Gold'
                              ' Bracelets 护腿： Veteran\'s Greaves 重量： 39.5 '])


def treeviewClick(event):  # 单击
    for item in table.selection():
        item_text = table.item(item, "values")
        print(item_text)

# 鼠标左键抬起
table.bind('<ButtonRelease-1>', treeviewClick)

# 鼠标选中一行回调
def selectTree(event):
    for item in table.selection():
        item_text = table.item(item, "values")
        print(item_text)
'''
columns = ['1']
tree = ttk.Treeview(height=24, columns=columns, )
tree.heading(column='#0', text='韧性', anchor=W,
             command=lambda: print('护甲搭配组合'))
tree.heading(column='1', text='护甲搭配组合', anchor=W,
             command=lambda: print('护甲搭配组合'))
tree.column("#0", anchor="w", width=80)
tree.column("1", anchor="w", width=660)

tree.anchor("center")
tree.place(
    x=354,
    y=100, )
'''
myid = tree.insert("", "end", text="71", values=[])  # ""表示父节点是根
myidx1 = tree.insert(myid, "end", text=" ", values=["头盔： Veteran\'s Helm 护甲： Veteran\'s Armor 手套： Gold\'Bracele"
                                                    "ts 护腿： Veteran\'s Greaves 重量： 39.5 "])
myidx2 = tree.insert(myid, "end", text=" ", values=["头盔： Veteran\'s Helm 护甲： Veteran\'s Armor 手套： Gold\'Bracele"
                                                    "ts 护腿： Veteran\'s Greaves 重量： 39.5 "])
myidx3 = tree.insert(myid, "end", text=" ", values=["头盔： Veteran\'s Helm 护甲： Veteran\'s Armor 手套： Gold\'Bracele"
                                                    "ts 护腿： Veteran\'s Greaves 重量： 39.5 "])
myid4 = tree.insert("", "end", text="70", values=[])  # ""表示父节点是根
myidx5 = tree.insert(myid4, "end", text=" ", values=["头盔： Veteran\'s Helm 护甲： Veteran\'s Armor 手套： Gold\'Bracele"
                                                     "ts 护腿： Veteran\'s Greaves 重量： 39.5 "])
myidx6 = tree.insert(myid4, "end", text=" ", values=["头盔： Veteran\'s Helm 护甲： Veteran\'s Armor 手套： Gold\'Bracele"
                                                     "ts 护腿： Veteran\'s Greaves 重量： 39.5 "])
myidx7 = tree.insert(myid4, "end", text=" ", values=["头盔： Veteran\'s Helm 护甲： Veteran\'s Armor 手套： Gold\'Bracele"
                                                     "ts 护腿： Veteran\'s Greaves 重量： 39.5 "])
myid4 = tree.insert("", "end", text="69", values=[])  # ""表示父节点是根
myid4 = tree.insert("", "end", text="68", values=[])  # ""表示父节点是根
'''


def selectTree(event):
    curItem = tree.focus()
    _dictionary = tree.item(curItem)
    if len(_dictionary["values"]) == 2:
        print(_dictionary["values"][0])
        print(_dictionary["values"][1])
        msgbox.showinfo("护甲信息", _dictionary["values"][1])


# 选中行
tree.bind('<<TreeviewSelect>>', selectTree)


def printSomeThing():
    # print(selectedWgtPercentID.get())
    # print(entry_8.get())
    # print(getWgtPercent())
    # main.testfunction()
    # print(HeadIDInputEntry.get(), "1")
    # print(ChestIDInputEntry.get(), "2")
    # print(LegIDInputEntry.get(), "3")
    # print(GauntletIDInputEntry.get(), "4")
    # print(MaxWgtInputEntry.get(), "7")
    # print(entry_8.get(), "8")
    # print(PoiInputEntry.get(), "9")
    # print(CurrentWgtInputEntry.get(), "10")
    getFixTerm(FixTerm)
    print(FixTerm)


def getFixTerm(fixterm):
    fixterm["helm"] = int(HeadIDInputEntry.get())
    fixterm["chest"] = int(ChestIDInputEntry.get())
    fixterm["leg"] = int(LegIDInputEntry.get())
    fixterm["gauntlet"] = int(GauntletIDInputEntry.get())


def findArmor():
    print("button_1 clicked")
    _ArmorName = armorNameInputEntry.get()
    armorIDOutputEntry.delete(0, END)
    armorIDOutputEntry.insert(0, main.findArmor(_ArmorName))


def getWgtPercent():
    _id = selectedWgtPercentID.get()
    if _id == "7":
        return 0.699
    elif _id == "3":
        return 0.299
    elif _id == "1":
        if type(entry_8.get()) == str and 0 < float(entry_8.get()) < 100:
            return float(entry_8.get()) / 100
        else:
            return -1
    else:
        return -1


def fillOutTreeMode1(doubleList):
    for k in doubleList:
        TreeDir[str(k) + "_parent"] = tree.insert("", "end", text=str(k), values=[])
        for i in range(0, len(doubleList[k])):
            # print(k,i,str(k) + "_" + str(i))
            # print(doubleList[k][i].Helm.Name)
            TreeDir[str(k) + "_" + str(i)] = tree.insert(TreeDir[str(k) + "_parent"], "end",
                                                         text=str(k) + "_" + str(i),
                                                         values=[("头盔：" + doubleList[k][i].Helm.Name
                                                                  + "  护甲：" + doubleList[k][i].Chest.Name
                                                                  + "  手套：" + doubleList[k][i].Gauntlet.Name
                                                                  + "  护腿：" + doubleList[k][i].Leg.Name
                                                                  + "  重量：" + str(doubleList[k][i].Wgt)),
                                                                 "头盔：" + doubleList[k][i].Helm.Name +
                                                                 "\n护甲：" + doubleList[k][i].Chest.Name +
                                                                 "\n手套：" + doubleList[k][i].Gauntlet.Name +
                                                                 "\n护腿：" + doubleList[k][i].Leg.Name +
                                                                 "\n重量：" + str(round(doubleList[k][i].Wgt, 3)) +
                                                                 "\n物理：" + str(round(doubleList[k][i].Phy, 3)) +
                                                                 "\n打击抗性：" + str(round(doubleList[k][i].VSStr, 3)) +
                                                                 "\n斩击抗性：" + str(round(doubleList[k][i].VSSla, 3)) +
                                                                 "\n突刺抗性：" + str(round(doubleList[k][i].VSPie, 3)) +
                                                                 "\n魔力抗性：" + str(round(doubleList[k][i].Mag, 3)) +
                                                                 "\n火抗性：" + str(round(doubleList[k][i].Fir, 3)) +
                                                                 "\n雷抗性：" + str(round(doubleList[k][i].Lit, 3)) +
                                                                 "\n圣抗性：" + str(round(doubleList[k][i].Hol, 3)) +
                                                                 "\n免疫力：" + str(round(doubleList[k][i].Imm, 3)) +
                                                                 "\n健壮度：" + str(round(doubleList[k][i].Robu, 3)) +
                                                                 "\n理智度：" + str(round(doubleList[k][i].Foc, 3)) +
                                                                 "\n抗死度：" + str(round(doubleList[k][i].Vita, 3)) +
                                                                 "\n韧性：" + str(round(doubleList[k][i].Poi, 3)) +
                                                                 "\n韧重比：" + str(round(doubleList[k][i].PoiPerWgt, 3))
                                                                 ])


def sort(playerList, sortID):
    if sortID == "1":
        for k in playerList:
            playerList[k] = main.PhyInsertionSort(playerList[k])
    elif sortID == "2":
        for k in playerList:
            playerList[k] = main.VSStrInsertionSort(playerList[k])
    elif sortID == "3":
        for k in playerList:
            playerList[k] = main.VSSlaInsertionSort(playerList[k])
    elif sortID == "4":
        for k in playerList:
            playerList[k] = main.VSPieInsertionSort(playerList[k])
    elif sortID == "5":
        for k in playerList:
            playerList[k] = main.MagInsertionSort(playerList[k])
    elif sortID == "6":
        for k in playerList:
            playerList[k] = main.FirInsertionSort(playerList[k])
    elif sortID == "7":
        for k in playerList:
            playerList[k] = main.LitInsertionSort(playerList[k])
    elif sortID == "8":
        for k in playerList:
            playerList[k] = main.HolInsertionSort(playerList[k])
    elif sortID == "9":
        for k in playerList:
            playerList[k] = main.ImmInsertionSort(playerList[k])
    elif sortID == "10":
        for k in playerList:
            playerList[k] = main.RobuInsertionSort(playerList[k])
    elif sortID == "11":
        for k in playerList:
            playerList[k] = main.FocInsertionSort(playerList[k])


def calculateMode_1():
    x = tree.get_children()
    for item in x:
        tree.delete(item)
    _totalWeight = float(MaxWgtInputEntry.get())
    _weaponAndRing = float(CurrentWgtInputEntry.get())
    _ratio = getWgtPercent()
    getFixTerm(FixTerm)
    Player_SeparateByPoi = main.calculate(_totalWeight, _weaponAndRing, _ratio, FixTerm)
    sortID = selectedAbs.get()
    sort(Player_SeparateByPoi, sortID)
    for k in Player_SeparateByPoi:
        Player_SeparateByPoi[k].reverse()
        while len(Player_SeparateByPoi[k]) > 8:
            Player_SeparateByPoi[k].pop()
    fillOutTreeMode1(Player_SeparateByPoi)


'''
radiobutton_1 = ttk.Radiobutton(text="Phy.abs", value=1, variable=selected)
radiobutton_1.place(
    x=26,
    y=356,
    height=20
)
'''
canvas.create_rectangle(
    244.9999999999999,
    2.000000000000007,
    246.9999999999999,
    38.00000000000001,
    fill="#151515",
    outline="")

canvas.create_rectangle(
    154.9999999999999,
    2.000000000000007,
    156.9999999999999,
    38.00000000000001,
    fill="#151515",
    outline="")

canvas.create_rectangle(
    64.99999999999989,
    2.000000000000007,
    66.99999999999989,
    38.00000000000001,
    fill="#151515",
    outline="")

window.resizable(False, False)
window.mainloop()
